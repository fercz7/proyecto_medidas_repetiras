base$diametro = as.numeric( base$diametro)
base$tratamiento = as.factor( base$tratamiento)
base$medida = as.factor( base$medida)
base$altura = as.numeric( base$altura)
base$diametro = as.numeric( base$diametro)
library( dplyr )
beta0=beta1=c()
ind = levels( base$medida)[1]
for(i in 1: length( ind) ) {
dat = base %>% filter( medida == ind[i])
mod = lm( altura ~ n_med, data = dat)
beta0[i] = mod$coef[1]
beta1[i] = mod$coef[2]
}
bet0=bet1=c()
for(i in 1: length( ind) ) {
dat = base %>% filter( medida == ind[i])
mod = lm( diametro ~ n_med, data = dat)
bet0[i] = mod$coef[1]
bet1[i] = mod$coef[2]
}
paste("correlacion para altura :", cor( beta0, beta1), "correlacion para diametro :",cor( bet0, bet1), sep = "")
library( dplyr )
beta0=beta1=c()
ind = levels( base$medida)[1]
for(i in 1: length( ind) ) {
dat = base %>% filter( medida == ind[i]) %>% na.omit()
mod = lm( altura ~ n_med, data = dat)
beta0[i] = mod$coef[1]
beta1[i] = mod$coef[2]
}
bet0=bet1=c()
for(i in 1: length( ind) ) {
dat = base %>% filter( medida == ind[i]) %>% na.omit()
mod = lm( diametro ~ n_med, data = dat)
bet0[i] = mod$coef[1]
bet1[i] = mod$coef[2]
}
paste("correlacion para altura :", cor( beta0, beta1), "correlacion para diametro :",cor( bet0, bet1), sep = "")
library( dplyr )
beta0=beta1=c()
ind = levels( base$medida)[1]
for(i in 1: length( ind) ) {
dat = base %>% filter( medida == ind[i])
dat = na.omit()
mod = lm( altura ~ n_med, data = dat)
beta0[i] = mod$coef[1]
beta1[i] = mod$coef[2]
}
library( dplyr )
beta0=beta1=c()
ind = levels( base$medida)[1]
for(i in 1: length( ind) ) {
dat = base %>% filter( medida == ind[i])
dat = na.omit( dat)
mod = lm( altura ~ n_med, data = dat)
beta0[i] = mod$coef[1]
beta1[i] = mod$coef[2]
}
bet0=bet1=c()
for(i in 1: length( ind) ) {
dat = base %>% filter( medida == ind[i]) %>% na.omit()
dat = na.omit( dat)
mod = lm( diametro ~ n_med, data = dat)
bet0[i] = mod$coef[1]
bet1[i] = mod$coef[2]
}
paste("correlacion para altura :", cor( beta0, beta1), "correlacion para diametro :",cor( bet0, bet1), sep = "")
cor( beta0, beta1)
#rm(list=ls(all=TRUE))
load("sueÃ±o.Rdata")
info = openxlsx::read.xlsx("Experimento para trabajar.xlsx", sheet = "datos");
info[1, 2] = "1.1"
info = openxlsx::read.xlsx("Experimento para trabajar.xlsx", sheet = "datos");
info[1, 2] = "1.1"
H = c()
for( i in 1:nrow( info)){
k = c( as.numeric( info[i,3]), as.numeric( info[i,4]), as.numeric( info[i,5]), as.numeric( info[i, 7]))
H = append(H, k)
}
D = c()
for( i in 1:nrow( info)){
k = c( as.numeric( info[i,9]), as.numeric( info[i,10]), as.numeric( info[i,11]), as.numeric( info[i, 13]))
D = append(D, k)
}
base = data.frame( tratamiento = rep( info$Tratamiento, each = 4),
medida = rep( info$Medida, each = 4),
altura = H,
diametro = D,
n_med = rep(1:4, 10*4 )
)
base$tratamiento = as.factor( base$tratamiento)
base$medida = as.factor( base$medida)
base$altura = as.numeric( base$altura)
base$diametro = as.numeric( base$diametro)#View( base )
library( dplyr )
install.packages("tidyr")
library( dplyr )
library(tidyverse)
info = openxlsx::read.xlsx("Experimento para trabajar.xlsx", sheet = "datos");
info[1, 2] = "1.1"
library(tidyverse)
info = openxlsx::read.xlsx("Experimento para trabajar.xlsx", sheet = "datos");
info[1, 2] = "1.1"
View(`*tmp*`)
View(`*tmp*`)
View(`*tmp*`)
library(tidyverse)
info = openxlsx::read.xlsx("Experimento para trabajar.xlsx", sheet = "datos");
info[1, 2] = "1.1"
H = c()
for( i in 1:nrow( info)){
k = c( as.numeric( info[i,3]), as.numeric( info[i,4]), as.numeric( info[i,5]), as.numeric( info[i, 7]))
H = append(H, k)
}
D = c()
for( i in 1:nrow( info)){
k = c( as.numeric( info[i,9]), as.numeric( info[i,10]), as.numeric( info[i,11]), as.numeric( info[i, 13]))
D = append(D, k)
}
base = data.frame( tratamiento = rep( info$Tratamiento, each = 4),
medida = rep( info$Medida, each = 4),
altura = H,
diametro = D,
n_med = rep(1:4, 10*4 )
)
base%>% mutate_if(is.numeric, replace_na, 0) %>%
mutate_if(is.character, replace_na, "0")
base$tratamiento = as.factor( base$tratamiento)
base$medida = as.factor( base$medida)
base$altura = as.numeric( base$altura)
base$diametro = as.numeric( base$diametro)#replace(is.na(.), 0)
View( base )
library(tidyverse)
info = openxlsx::read.xlsx("Experimento para trabajar.xlsx", sheet = "datos");
info[1, 2] = "1.1"
H = c()
for( i in 1:nrow( info)){
k = c( as.numeric( info[i,3]), as.numeric( info[i,4]), as.numeric( info[i,5]), as.numeric( info[i, 7]))
H = append(H, k)
}
D = c()
for( i in 1:nrow( info)){
k = c( as.numeric( info[i,9]), as.numeric( info[i,10]), as.numeric( info[i,11]), as.numeric( info[i, 13]))
D = append(D, k)
}
base = data.frame( tratamiento = rep( info$Tratamiento, each = 4),
medida = rep( info$Medida, each = 4),
altura = H,
diametro = D,
n_med = rep(1:4, 10*4 )
)
base = base %>% replace_na(0)
detach("package:tidyverse", unload = TRUE)
library(tidyverse)
info = openxlsx::read.xlsx("Experimento para trabajar.xlsx", sheet = "datos");
info[1, 2] = "1.1"
H = c()
for( i in 1:nrow( info)){
k = c( as.numeric( info[i,3]), as.numeric( info[i,4]), as.numeric( info[i,5]), as.numeric( info[i, 7]))
H = append(H, k)
}
D = c()
for( i in 1:nrow( info)){
k = c( as.numeric( info[i,9]), as.numeric( info[i,10]), as.numeric( info[i,11]), as.numeric( info[i, 13]))
D = append(D, k)
}
base = data.frame( tratamiento = rep( info$Tratamiento, each = 4),
medida = rep( info$Medida, each = 4),
altura = H,
diametro = D,
n_med = rep(1:4, 10*4 )
)
detach("package:tidyr", unload = TRUE)
detach("package:tidyverse", unload = TRUE)
library(tidyverse)
info = openxlsx::read.xlsx("Experimento para trabajar.xlsx", sheet = "datos");
info[1, 2] = "1.1"
detach("package:tidyr", unload = TRUE)
detach("package:tidyverse", unload = TRUE)
library(tidyr)
library(dplyr)
info = openxlsx::read.xlsx("Experimento para trabajar.xlsx", sheet = "datos");
info[1, 2] = "1.1"
H = c()
for( i in 1:nrow( info)){
k = c( as.numeric( info[i,3]), as.numeric( info[i,4]), as.numeric( info[i,5]), as.numeric( info[i, 7]))
H = append(H, k)
}
D = c()
for( i in 1:nrow( info)){
k = c( as.numeric( info[i,9]), as.numeric( info[i,10]), as.numeric( info[i,11]), as.numeric( info[i, 13]))
D = append(D, k)
}
base = data.frame( tratamiento = rep( info$Tratamiento, each = 4),
medida = rep( info$Medida, each = 4),
altura = H,
diametro = D,
n_med = as.factor( rep(1:4, 10*4 ) )
)
library(tidyr)
library(dplyr)
info = openxlsx::read.xlsx("Experimento para trabajar.xlsx", sheet = "datos");
info[1, 2] = "1.1"
H = c()
for( i in 1:nrow( info)){
k = c( as.numeric( info[i,3]), as.numeric( info[i,4]), as.numeric( info[i,5]), as.numeric( info[i, 7]))
H = append(H, k)
}
D = c()
for( i in 1:nrow( info)){
k = c( as.numeric( info[i,9]), as.numeric( info[i,10]), as.numeric( info[i,11]), as.numeric( info[i, 13]))
D = append(D, k)
}
base = data.frame( tratamiento = as.factor( rep( info$Tratamiento, each = 4) ),
medida = as.factor( rep( info$Medida, each = 4) ),
altura = H,
diametro = D,
n_med = as.factor( rep(1:4, 10*4 ) )
)
library(tidyr)
library(dplyr)
info = openxlsx::read.xlsx("Experimento para trabajar.xlsx", sheet = "datos");
info[1, 2] = "1.1"
library(tidyr)
library(dplyr)
info = openxlsx::read.xlsx("Experimento para trabajar.xlsx", sheet = "datos");
info[1, 2] = "1.1"
str( info)
H = c()
for( i in 1:nrow( info)){
k = c( as.numeric( info[i,3]), as.numeric( info[i,4]), as.numeric( info[i,5]), as.numeric( info[i, 7]))
H = append(H, k)
}
D = c()
for( i in 1:nrow( info)){
k = c( as.numeric( info[i,9]), as.numeric( info[i,10]), as.numeric( info[i,11]), as.numeric( info[i, 13]))
D = append(D, k)
}
base = data.frame( tratamiento = as.factor( rep( info$Tratamiento, each = 4) ),
medida = as.factor( rep( info$Medida, each = 4) ),
altura = H,
diametro = D,
n_med = as.factor( rep(1:4, 10*4 ) )
)
base = base %>% replace_na( list( altura = 0,
diametro = 0,
) )
H = c()
for( i in 1:nrow( info)){
k = c( as.numeric( info[i,3]), as.numeric( info[i,4]), as.numeric( info[i,5]), as.numeric( info[i, 7]))
H = append(H, k)
}
D = c()
for( i in 1:nrow( info)){
k = c( as.numeric( info[i,9]), as.numeric( info[i,10]), as.numeric( info[i,11]), as.numeric( info[i, 13]))
D = append(D, k)
}
base = data.frame( tratamiento = as.factor( rep( info$Tratamiento, each = 4) ),
medida = as.factor( rep( info$Medida, each = 4) ),
altura = H,
diametro = D,
n_med = as.factor( rep(1:4, 10*4 ) )
)
base = base %>% replace_na( list( altura = 0,
diametro = 0
) )
str( base )
#View( base )
library(tidyr)
library(dplyr)
info = openxlsx::read.xlsx("Experimento para trabajar.xlsx", sheet = "datos");
info[1, 2] = "1.1"
H = c()
for( i in 1:nrow( info)){
k = c( as.numeric( info[i,3]), as.numeric( info[i,4]), as.numeric( info[i,5]), as.numeric( info[i, 7]))
H = append(H, k)
}
D = c()
for( i in 1:nrow( info)){
k = c( as.numeric( info[i,9]), as.numeric( info[i,10]), as.numeric( info[i,11]), as.numeric( info[i, 13]))
D = append(D, k)
}
base = data.frame( tratamiento = as.factor( rep( info$Tratamiento, each = 4) ),
medida = as.factor( rep( info$Medida, each = 4) ),
altura = H,
diametro = D,
n_med = as.factor( rep(1:4, 10*4 ) )
)
base = base %>% replace_na( list( altura = 0,
diametro = 0
) )
str( base )
beta0=beta1=c()
ind = levels( base$medida)[1]
for(i in 1: length( ind) ) {
dat = base %>% filter( medida == ind[i])
dat = na.omit( dat)
mod = lm( altura ~ n_med, data = dat)
beta0[i] = mod$coef[1]
beta1[i] = mod$coef[2]
}
bet0=bet1=c()
for(i in 1: length( ind) ) {
dat = base %>% filter( medida == ind[i]) %>% na.omit()
dat = na.omit( dat)
mod = lm( diametro ~ n_med, data = dat)
bet0[i] = mod$coef[1]
bet1[i] = mod$coef[2]
}
paste("correlacion para altura :", cor( beta0, beta1), "correlacion para diametro :",cor( bet0, bet1), sep = "")
#por alguna razon no funciona, solucionar
beta0=beta1=c()
ind = levels( base$medida)
for(i in 1: length( ind) ) {
dat = base %>% filter( medida == ind[i])
dat = na.omit( dat)
mod = lm( altura ~ n_med, data = dat)
beta0[i] = mod$coef[1]
beta1[i] = mod$coef[2]
}
bet0=bet1=c()
for(i in 1: length( ind) ) {
dat = base %>% filter( medida == ind[i]) %>% na.omit()
dat = na.omit( dat)
mod = lm( diametro ~ n_med, data = dat)
bet0[i] = mod$coef[1]
bet1[i] = mod$coef[2]
}
paste("correlacion para altura :", cor( beta0, beta1), "correlacion para diametro :",cor( bet0, bet1), sep = "")
#por alguna razon no funciona, solucionar
beta0=beta1=c()
ind = levels( base$medida)
for(i in 1: length( ind) ) {
dat = base %>% filter( medida == ind[i])
mod = lm( altura ~ n_med, data = dat)
beta0[i] = mod$coef[1]
beta1[i] = mod$coef[2]
}
bet0=bet1=c()
for(i in 1: length( ind) ) {
dat = base %>% filter( medida == ind[i])
mod = lm( diametro ~ n_med, data = dat)
bet0[i] = mod$coef[1]
bet1[i] = mod$coef[2]
}
paste("correlacion para altura :", cor( beta0, beta1), "correlacion para diametro :",cor( bet0, bet1), sep = "")
#por alguna razon no funciona, solucionar
paste("correlacion para altura :", round(cor( beta0, beta1),2), "correlacion para diametro :",round( cor( bet0, bet1),2), sep = "")
paste("correlacion para altura :", round(cor( beta0, beta1),2), " correlacion para diametro :",round( cor( bet0, bet1),2), sep = "")
with( base, lattice::xyplot( altura ~ n_med, group = medida, ylab="Altura de la planta",type="r", main = "Altura"))
lattice::xyplot( beta1 ~ beta0, type = c("r","p"), auto.key = T)
lattice::xyplot( beta1 ~ beta0, type = c("r","p"), auto.key = T, MAIN = paste("correlacion para altura entre b0 y b1:", round(cor( beta0, beta1),2)))
lattice::xyplot( beta1 ~ beta0, type = c("r","p"), auto.key = T, MAIN = paste("correlacion para altura entre b0 y b1:", round(cor( beta0, beta1),2)))
lattice::xyplot( beta1 ~ beta0, type = c("r","p"), auto.key = T, MAIN = "hola")#paste("correlacion para altura entre b0 y b1:", round(cor( beta0, beta1),2)))
beta0=beta1=c()
ind = levels( base$medida)
for(i in 1: length( ind) ) {
dat = base %>% filter( medida == ind[i])
mod = lm( altura ~ n_med, data = dat)
beta0[i] = mod$coef[1]
beta1[i] = mod$coef[2]
}
bet0=bet1=c()
for(i in 1: length( ind) ) {
dat = base %>% filter( medida == ind[i])
mod = lm( diametro ~ n_med, data = dat)
bet0[i] = mod$coef[1]
bet1[i] = mod$coef[2]
}
paste("correlacion para altura :", round(cor( beta0, beta1),2), " correlacion para diametro :",round( cor( bet0, bet1),2), sep = "")
with( base, lattice::xyplot( altura ~ n_med, group = medida, ylab="Altura de la planta",type="r", main = "Altura"))
lattice::xyplot( beta1 ~ beta0, type = c("r","p"), auto.key = T)
with( base, lattice::xyplot( diametro ~ n_med, group = medida, ylab="Diametro de la planta",type="r", main = "Diametro"))
lattice::xyplot( bet1 ~ bet0, type = c("r","p"), auto.key = T)
save( base, file = "germinacion.Rdata")
detach("package:tidyr", unload = TRUE)
library(tidyr)
library(dplyr)
load("germinacion.Rdata")
library(tidyr)
library(dplyr)
load("germinacion.Rdata")
View(base)
beta0=beta1=c()
ind = levels( base$medida)
for(i in 1: length( ind) ) {
dat = base %>% filter( medida == ind[i])
mod = lm( altura ~ n_med, data = dat)
beta0[i] = mod$coef[1]
beta1[i] = mod$coef[2]
}
bet0=bet1=c()
for(i in 1: length( ind) ) {
dat = base %>% filter( medida == ind[i])
mod = lm( diametro ~ n_med, data = dat)
bet0[i] = mod$coef[1]
bet1[i] = mod$coef[2]
}
paste("correlacion para altura :", round(cor( beta0, beta1),2), " correlacion para diametro :",round( cor( bet0, bet1),2), sep = "")
with( base, lattice::xyplot( altura ~ n_med, group = medida, ylab="Altura de la planta",type="r", main = "Altura"))
lattice::xyplot( beta1 ~ beta0, type = c("r","p"), auto.key = T)
with( base, lattice::xyplot( diametro ~ n_med, group = medida, ylab="Diametro de la planta",type="r", main = "Diametro"))
lattice::xyplot( bet1 ~ bet0, type = c("r","p"), auto.key = T)
beta0=beta1=c()
ind = levels( base$medida)
for(i in 1: length( ind) ) {
dat = base %>% filter( medida == ind[i])
mod = lm( altura ~ n_med, data = dat)
beta0[i] = mod$coef[1]
beta1[i] = mod$coef[2]
}
bet0=bet1=c()
for(i in 1: length( ind) ) {
dat = base %>% filter( medida == ind[i])
mod = lm( diametro ~ n_med, data = dat)
bet0[i] = mod$coef[1]
bet1[i] = mod$coef[2]
}
paste("correlacion para altura :", round(cor( beta0, beta1),2), " correlacion para diametro :",round( cor( bet0, bet1),2), sep = "")
with( base, lattice::xyplot( altura ~ n_med, group = medida, ylab="Altura de la planta",type="r", main = "Altura"))
lattice::xyplot( beta1 ~ beta0, type = c("r","p"), auto.key = T)
with( base, lattice::xyplot( diametro ~ n_med, group = medida, ylab="Diametro de la planta",type="r", main = "Diametro"))
lattice::xyplot( bet1 ~ bet0, type = c("r","p"), auto.key = T)
options(contrasts=c("contr.sum","contr.poly"))
mod1 = lme4::lmer( altura ~ n_med*tratamiento + (1+tratamiento|medida) , REML = F, data = base)
load("ortodoncia.Rdata")
library( dplyr )
base$edad1=base$edad-8
beta0=beta1=c()
length(table( base$sujeto))
suj=as.numeric(base$ sujeto)
for(i in 1:27) {
info = base %>% filter( suj == i)
mod=lm(distancia~edad1,data = info)
beta0[i]=mod$coef[1]
beta1[i]=mod$coef[2]
}
with( base, lattice::xyplot( distancia ~ edad1, group=sujeto,pch=18, xlab="tiempo a partir de 8 aÃ±os", ylab="distancia promedio",type="r"));cor(beta0,beta1)
with( base, lattice::xyplot(distancia~edad1|sexo,group=sujeto,pch=18,
xlab="tiempo a partir de 8 aÃ±os",
ylab="distancia promedio",type=c("r")))
with( base, lattice::xyplot(distancia~edad1,group=sexo,col=c(2,4),
xlab="tiempo a partir de 8 aÃ±os",
ylab="distancia promedio",type="r",
key=list(corner=c(0,1),lines=list(col=c(4,2),lty=1),
text=list(c("masculino","femenino")))))
options(contrasts=c("contr.sum","contr.poly"))
mod1 = lme4::lmer(distancia~edad1*sexo+(1+edad1|sujeto),REML=F, data = base)
mod2 = lme4::lmer(distancia~edad1*sexo+(1|sujeto)+(0+edad1|sujeto),REML=F, data = base)
anova(mod1,mod2, test = "LRT")
28*4
28*5
rep(c(28, 28*2, 28*3, 28*4), 10*4 )
rep(c(28*2, 28*3, 28*4, 28*5), 10*4 )
85-21
85-51
51-21
rep(c(28*1, 28*2, 28*3, 28*5), 10*4 )
library(tidyr)
library(dplyr)
info = openxlsx::read.xlsx("Experimento para trabajar.xlsx", sheet = "datos");
info[1, 2] = "1.1"
H = c()
for( i in 1:nrow( info)){
k = c( as.numeric( info[i,3]), as.numeric( info[i,4]), as.numeric( info[i,5]), as.numeric( info[i, 7]))
H = append(H, k)
}
D = c()
for( i in 1:nrow( info)){
k = c( as.numeric( info[i,9]), as.numeric( info[i,10]), as.numeric( info[i,11]), as.numeric( info[i, 13]))
D = append(D, k)
}
base = data.frame( tratamiento = as.factor( rep( info$Tratamiento, each = 4) ),
medida = as.factor( rep( info$Medida, each = 4) ),
altura = H,
diametro = D,
n_med = rep(c(28*1, 28*2, 28*3, 28*5), 10*4 )
)
base = base %>% replace_na( list( altura = 0,
diametro = 0
) )
save( base, file = "germinacion.Rdata")
library(tidyr)
library(dplyr)
load("germinacion.Rdata")
beta0=beta1=c()
ind = levels( base$medida)
for(i in 1: length( ind) ) {
dat = base %>% filter( medida == ind[i])
mod = lm( altura ~ n_med, data = dat)
beta0[i] = mod$coef[1]
beta1[i] = mod$coef[2]
}
bet0=bet1=c()
for(i in 1: length( ind) ) {
dat = base %>% filter( medida == ind[i])
mod = lm( diametro ~ n_med, data = dat)
bet0[i] = mod$coef[1]
bet1[i] = mod$coef[2]
}
paste("correlacion para altura :", round(cor( beta0, beta1),2), " correlacion para diametro :",round( cor( bet0, bet1),2), sep = "")
with( base, lattice::xyplot( altura ~ n_med, group = medida, ylab="Altura de la planta",type="r", main = "Altura"))
lattice::xyplot( beta1 ~ beta0, type = c("r","p"), auto.key = T)
with( base, lattice::xyplot( diametro ~ n_med, group = medida, ylab="Diametro de la planta",type="r", main = "Diametro"))
lattice::xyplot( bet1 ~ bet0, type = c("r","p"), auto.key = T)
options(contrasts=c("contr.sum","contr.poly"))
mod1 = lme4::lmer( altura ~ n_med*tratamiento + (1+tratamiento|medida) , REML = F, data = base)
options(contrasts=c("contr.sum","contr.poly"))
mod1 = lme4::lmer( altura ~ n_med*tratamiento + (1+tratamiento|medida) , REML = F, data = base)
knitr::opts_chunk$set(echo = TRUE)
load("germinacion.Rdata")
