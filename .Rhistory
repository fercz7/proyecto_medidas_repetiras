with( base, lattice::xyplot( altura ~ n_med, groups = medida, ylab="Altura de la planta",type = c("r"), main = "Altura"))
with( base, lattice::xyplot( altura ~ n_med|medida, ylab="Altura de la planta",type = c("r","p"), main = "Altura"))
with( base, lattice::xyplot( altura ~ n_med, groups = medida, ylab="Altura de la planta",type = c("r"), main = "Altura"))
with( base, lattice::xyplot( altura ~ n_med|medida, ylab="Altura de cada planta ",type = c("r","p"), main = "Altura"))
with( base, lattice::xyplot( altura ~ n_med, groups = medida, ylab="Pendiente por planta",type = c("r"), main = "Altura"))
View( base)
#transformar base
library(tidyr)
library(dplyr)
info = openxlsx::read.xlsx("Experimento para trabajar.xlsx", sheet = "datos");
info[1, 2] = "1.1"
H = c()
for( i in 1:nrow( info)){
k = c( 0, as.numeric( info[i,3]), as.numeric( info[i,4]), as.numeric( info[i,5]), as.numeric( info[i, 7]) )
H = append(H, k)
}
D = c()
for( i in 1:nrow( info)){
k = c( 0, as.numeric( info[i,9]), as.numeric( info[i,10]), as.numeric( info[i,11]), as.numeric( info[i, 13]))
D = append(D, k)
}
base = data.frame( tratamiento = as.factor( rep( info$Tratamiento, each = 5) ),
medida = as.factor( rep( info$Medida, each = 5) ),
altura = H,
diametro = D,
n_med = rep(c(0, 28*1, 28*2, 28*3, 28*5), 10*5 )
)
base = base %>% replace_na( list( altura = 0,
diametro = 0
) )
View( base )
#transformar base
library(tidyr)
library(dplyr)
info = openxlsx::read.xlsx("Experimento para trabajar.xlsx", sheet = "datos");
info[1, 2] = "1.1"
H = c()
for( i in 1:nrow( info)){
k = c( 0, as.numeric( info[i,3]), as.numeric( info[i,4]), as.numeric( info[i,5]), as.numeric( info[i, 7]) )
H = append(H, k)
}
D = c()
for( i in 1:nrow( info)){
k = c( 0, as.numeric( info[i,9]), as.numeric( info[i,10]), as.numeric( info[i,11]), as.numeric( info[i, 13]))
D = append(D, k)
}
base = data.frame( tratamiento = as.factor( rep( info$Tratamiento, each = 5) ),
medida = as.factor( rep( info$Medida, each = 5) ),
altura = H,
diametro = D,
n_med = rep(c(0, 28*1, 28*2, 28*3, 28*5), 10*5 )
)
View
View( as.factor( rep( info$Tratamiento, each = 5) ))
length( H)
length( rep(c(0, 28*1, 28*2, 28*3, 28*5), 10*5 ) )
length( rep(c(0, 28*1, 28*2, 28*3, 28*5), 10*4 ) )
#transformar base
library(tidyr)
library(dplyr)
info = openxlsx::read.xlsx("Experimento para trabajar.xlsx", sheet = "datos");
info[1, 2] = "1.1"
H = c()
for( i in 1:nrow( info)){
k = c( 0, as.numeric( info[i,3]), as.numeric( info[i,4]), as.numeric( info[i,5]), as.numeric( info[i, 7]) )
H = append(H, k)
}
D = c()
for( i in 1:nrow( info)){
k = c( 0, as.numeric( info[i,9]), as.numeric( info[i,10]), as.numeric( info[i,11]), as.numeric( info[i, 13]))
D = append(D, k)
}
base = data.frame( tratamiento = as.factor( rep( info$Tratamiento, each = 5) ),
medida = as.factor( rep( info$Medida, each = 5) ),
altura = H,
diametro = D,
n_med = rep(c(0, 28*1, 28*2, 28*3, 28*5), 10*4 )
)
base = base %>% replace_na( list( altura = 0,
diametro = 0
) )
View( base )
library(tidyr)
library(dplyr)
info = openxlsx::read.xlsx("Experimento para trabajar.xlsx", sheet = "datos");
info[1, 2] = "1.1"
H = c()
for( i in 1:nrow( info)){
k = c( 0, as.numeric( info[i,3]), as.numeric( info[i,4]), as.numeric( info[i,5]), as.numeric( info[i, 7]) )
H = append(H, k)
}
D = c()
for( i in 1:nrow( info)){
k = c( 0, as.numeric( info[i,9]), as.numeric( info[i,10]), as.numeric( info[i,11]), as.numeric( info[i, 13]))
D = append(D, k)
}
base = data.frame( tratamiento = as.factor( rep( info$Tratamiento, each = 5) ),
medida = as.factor( rep( info$Medida, each = 5) ),
altura = H,
diametro = D,
dia = rep(c(0, 28*1, 28*2, 28*3, 28*5), 10*4 )
)
base = base %>% replace_na( list( altura = 0,
diametro = 0
) )
View( base )
save( base, file = "germinacion.Rdata")
library(tidyr)
library(dplyr)
load("germinacion.Rdata")
beta0=beta1=c()
ind = levels( base$medida)
for(i in 1: length( ind) ) {
dat = base %>% filter( medida == ind[i])
mod = lm( altura ~ dia, data = dat)
beta0[i] = mod$coef[1]
beta1[i] = mod$coef[2]
}
bet0=bet1=c()
for(i in 1: length( ind) ) {
dat = base %>% filter( medida == ind[i])
mod = lm( diametro ~ dia, data = dat)
bet0[i] = mod$coef[1]
bet1[i] = mod$coef[2]
}
paste("correlacion para altura :", round(cor( beta0, beta1),2), " correlacion para diametro :",round( cor( bet0, bet1),2), sep = "")
with( base, lattice::xyplot( altura ~ dia|medida, ylab="Altura de la planta",type = c("r","p"), main = "Altura"))
lattice::xyplot( beta1 ~ beta0, type = c("r","p"), auto.key = T)
with( base, lattice::xyplot( diametro ~ dia| medida, ylab="Diametro de la planta",type=c("r","p"), main = "Diametro"))
lattice::xyplot( bet1 ~ bet0, type = c("r","p"), auto.key = T)
with( base, lattice::xyplot( altura ~ dia|medida, ylab="Altura de cada planta ",type = c("r","p"), main = "Altura"))
with( base, lattice::xyplot( altura ~ dia, groups = medida, ylab="Pendiente por planta",type = c("r"), main = "Altura"))
options(contrasts=c("contr.sum","contr.poly"))
mod1 = lme4::lmer( altura ~ dia*tratamiento + (1+dia|medida) , REML = F, data = base)
mod2 = lme4::lmer( altura ~ dia*tratamiento + (1|medida) + (0+dia|medida) , REML = F, data = base)
anova( mod1, mod2)
with( base, lattice::xyplot( log( altura ) ~ dia|medida, ylab="Altura de cada planta ",type = c("r","p"), main = "Altura"))
with( base, lattice::xyplot( log( altura + 1 ) ~ dia|medida, ylab="Altura de cada planta ",type = c("r","p"), main = "Altura"))
options(contrasts=c("contr.sum","contr.poly"))
mod1 = lme4::lmer( altura ~ dia*tratamiento + (1+dia|medida) , REML = F, data = base)
mod2 = lme4::lmer( altura ~ dia*tratamiento + (1|medida) + (0+dia|medida) , REML = F, data = base)
anova( mod1, mod2)
#transformar base
library(tidyr)
library(dplyr)
info = openxlsx::read.xlsx("Experimento para trabajar.xlsx", sheet = "datos");
info[1, 2] = "1.1"
H = c()
for( i in 1:nrow( info)){
k = c( 0, as.numeric( info[i,3]), as.numeric( info[i,4]), as.numeric( info[i,5]), as.numeric( info[i, 7]) )
H = append(H, k)
}
D = c()
for( i in 1:nrow( info)){
k = c( 0, as.numeric( info[i,9]), as.numeric( info[i,10]), as.numeric( info[i,11]), as.numeric( info[i, 13]))
D = append(D, k)
}
base = data.frame( tratamiento = as.factor( rep( info$Tratamiento, each = 5) ),
medida = as.factor( rep( info$Medida, each = 5) ),
altura = H,
diametro = D,
dia = rep(c(1, 28*1, 28*2, 28*3, 28*5), 10*4 )
)
base = base %>% replace_na( list( altura = 0,
diametro = 0
) )
View( base )
save( base, file = "germinacion.Rdata")
library(tidyr)
library(dplyr)
load("germinacion.Rdata")
beta0=beta1=c()
ind = levels( base$medida)
for(i in 1: length( ind) ) {
dat = base %>% filter( medida == ind[i])
mod = lm( altura ~ dia, data = dat)
beta0[i] = mod$coef[1]
beta1[i] = mod$coef[2]
}
bet0=bet1=c()
for(i in 1: length( ind) ) {
dat = base %>% filter( medida == ind[i])
mod = lm( diametro ~ dia, data = dat)
bet0[i] = mod$coef[1]
bet1[i] = mod$coef[2]
}
paste("correlacion para altura :", round(cor( beta0, beta1),2), " correlacion para diametro :",round( cor( bet0, bet1),2), sep = "")
with( base, lattice::xyplot( altura ~ dia|medida, ylab="Altura de la planta",type = c("r","p"), main = "Altura"))
lattice::xyplot( beta1 ~ beta0, type = c("r","p"), auto.key = T)
with( base, lattice::xyplot( diametro ~ dia| medida, ylab="Diametro de la planta",type=c("r","p"), main = "Diametro"))
lattice::xyplot( bet1 ~ bet0, type = c("r","p"), auto.key = T)
with( base, lattice::xyplot( log( altura + 1 ) ~ dia|medida, ylab="Altura de cada planta ",type = c("r","p"), main = "Altura"))
with( base, lattice::xyplot( altura ~ dia, groups = medida, ylab="Pendiente por planta",type = c("r"), main = "Altura"))
options(contrasts=c("contr.sum","contr.poly"))
mod1 = lme4::lmer( altura ~ dia*tratamiento + (1+dia|medida) , REML = F, data = base)
mod2 = lme4::lmer( altura ~ dia*tratamiento + (1|medida) + (0+dia|medida) , REML = F, data = base)
anova( mod1, mod2)
base2 = base %>% filter( altura > 0 & dia != 1 )
View(base2)
knitr::opts_chunk$set(echo = TRUE)
library(tidyr)
library(dplyr)
load("germinacion.Rdata")
vacios = names(which(table(base$altura,base$medida)[1,]>1))
base2 = base[base$medida%in%vacios==F,]
length(unique(base2$medida))
View(base2)
with( base2, lattice::xyplot( altura ~ dia|medida, ylab="Altura de cada planta ",type = c("r","p"), main = "Altura"))
with( base2, lattice::xyplot( altura ~ dia, groups = medida, ylab="Pendiente por planta",type = c("r"), main = "Altura"))
with( base, lattice::xyplot( altura ~ dia|medida, ylab="Altura de cada planta ",type = c("r","p"), main = "Altura"))
with( base, lattice::xyplot( altura ~ dia, groups = medida, ylab="Pendiente por planta",type = c("r"), main = "Altura"))
with( base, lattice::xyplot( altura ~ dia|medida, ylab="Altura de cada planta ",type = c("r","p"), main = "Altura"))
with( base, lattice::xyplot( altura ~ dia, groups = medida, ylab="Pendiente por planta",type = c("r"), main = "Altura"))
#transformar base
library(tidyr)
library(dplyr)
info = openxlsx::read.xlsx("Experimento para trabajar.xlsx", sheet = "datos");
info[1, 2] = "1.1"
H = c()
for( i in 1:nrow( info)){
k = c(  as.numeric( info[i,3]), as.numeric( info[i,4]), as.numeric( info[i,5]), as.numeric( info[i, 7]) )
H = append(H, k)
}
D = c()
for( i in 1:nrow( info)){
k = c(  as.numeric( info[i,9]), as.numeric( info[i,10]), as.numeric( info[i,11]), as.numeric( info[i, 13]))
D = append(D, k)
}
base = data.frame( riego = as.factor( rep( info$Riego, each = 4) ),
hongos = as.factor( rep( info$Hongos, each = 4) ),
planta = as.factor( rep( info$Medida, each = 4) ),
altura = H,
diametro = D,
dia = rep(c(28*1, 28*2, 28*3, 28*5), 10*4 )
)
base = base %>% replace_na( list( altura = 0,
diametro = 0
) )
View( base )
info = openxlsx::read.xlsx("Experimento para trabajar.xlsx", sheet = "datos");
info[1, 2] = "1.1"
View(info)
info = openxlsx::read.xlsx("Experimento para trabajar.xlsx", sheet = "datos");
info[1, 2] = "1.1"
View(info)
info[1, 2] = "1.1"
View(info)
info = openxlsx::read.xlsx("Experimento para trabajar.xlsx", sheet = "datos");
info[1, 3] = "1.1"
View(info)
info = openxlsx::read.xlsx("Experimento para trabajar.xlsx", sheet = "datos");
info[1, 3] = "1.1"
View(info)
H = c()
D = c()
for( i in 1:nrow( info)){
k = c(  as.numeric( info[i,3+1]), as.numeric( info[i,4+1]), as.numeric( info[i,5+1]), as.numeric( info[i, 7+1]) )
H = append(H, k)
j = c(  as.numeric( info[i,9+1]), as.numeric( info[i,10+1]), as.numeric( info[i,11+1]), as.numeric( info[i, 13+1]))
D = append(D, j)
}
base = data.frame( riego = as.factor( rep( info$Riego, each = 4) ),
hongos = as.factor( rep( info$Hongos, each = 4) ),
planta = as.factor( rep( info$Medida, each = 4) ),
altura = H,
diametro = D,
dia = rep(c(28*1, 28*2, 28*3, 28*5), 10*4 )
)
base = base %>% replace_na( list( altura = 0,
diametro = 0
) )
View( base )
View( base )
save( base, file = "germinacion.Rdata")
save( base, file = "germinacion.Rdata")
knitr::opts_chunk$set(echo = TRUE)
library(tidyr)
library(tidyr)
library(dplyr)
load("germinacion.Rdata")
library(tidyr)
library(dplyr)
load("germinacion.Rdata")
vacios = names(which(table(base$altura,base$medida)[1,]>1))
vacios = names(which(table(base$altura,base$planta)[1,]>1))
View( vacios )
7*4
which(table(base$altura,base$planta)[1,]>1)
table(base$altura,base$planta)
base2 = base[base$planta%in%vacios==F,]
length(unique(base2$medida))
View(base2)
base2 <- base %>% filter( altura == vacios)
View(base2)
library(tidyr)
library(dplyr)
load("germinacion.Rdata")
vacios = names(which(table(base$altura,base$planta)[1,]>1))
base2 <- base %>% filter( altura %in% -c(vacios) )
`%notin%` <- Negate(`%in%`)
base2 <- base %>% filter( altura %notin% -c(vacios) )
`%notin%` <- Negate(`%in%`)
base2 <- base %>% filter( altura %notin% -c(vacios) )
library(tidyr)
library(dplyr)
load("germinacion.Rdata")
vacios = names(which(table(base$altura,base$planta)[1,]>1))
`%notin%` <- Negate(`%in%`)
base2 <- base %>% filter( planta %notin% vacios) )
base2 <- base %>% filter( planta %notin% vacios)
base3 = base[base$planta%in%vacios==F,]
View(base3)
library(tidyr)
library(dplyr)
load("germinacion.Rdata")
negat
library(tidyr)
library(dplyr)
load("germinacion.Rdata")
#negat
vacios = names(which(table(base$altura,base$planta)[1,]>1))
`%notin%` <- Negate(`%in%`)
base2 <- base %>% filter( planta %notin% vacios)
#base3 = base[base$planta%in%vacios==F,]
#length(unique(base2$medida))
View(base2)
levels( base2$planta)
unique( base2$planta)
length( unique( base2$planta))
132/40
132/4
beta0=beta1=c()
ind = unique( base2$planta)
for(i in 1: length( ind) ) {
dat = base2 %>% filter( planta == ind[i])
mod = lm( altura ~ dia, data = dat)
beta0[i] = mod$coef[1]
beta1[i] = mod$coef[2]
}
bet0=bet1=c()
for(i in 1: length( ind) ) {
dat = base2 %>% filter( planta == ind[i])
mod = lm( diametro ~ dia, data = dat)
bet0[i] = mod$coef[1]
bet1[i] = mod$coef[2]
}
paste("correlacion para altura :", round(cor( beta0, beta1),2), " correlacion para diametro :",round( cor( bet0, bet1),2), sep = "")
beta0=beta1=c()
ind = unique( base2$planta)
for(i in 1: length( ind) ) {
dat = base2 %>% filter( planta == ind[i])
mod = lm( altura ~ dia, data = dat)
beta0[i] = mod$coef[1]
beta1[i] = mod$coef[2]
}
bet0=bet1=c()
for(i in 1: length( ind) ) {
dat = base2 %>% filter( planta == ind[i])
mod = lm( diametro ~ dia, data = dat)
bet0[i] = mod$coef[1]
bet1[i] = mod$coef[2]
}
paste("correlacion para altura :", round(cor( beta0, beta1),2), " correlacion para diametro :",round( cor( bet0, bet1),2), sep = "")
with( base2, lattice::xyplot( altura ~ dia|planta, ylab="Altura de la planta",type = c("r","p"), main = "Altura"))
lattice::xyplot( beta1 ~ beta0, type = c("r","p"), auto.key = T)
with( base2, lattice::xyplot( diametro ~ dia| planta, ylab="Diametro de la planta",type=c("r","p"), main = "Diametro"))
lattice::xyplot( bet1 ~ bet0, type = c("r","p"), auto.key = T)
with( base, lattice::xyplot( altura ~ dia|planta, ylab="Altura de cada planta ",type = c("r","p"), main = "Altura"))
with( base, lattice::xyplot( altura ~ dia, groups = planta, ylab="Pendiente por planta",type = c("r"), main = "Altura"))
with( base2, lattice::xyplot( altura ~ dia|planta, ylab="Altura de cada planta ",type = c("r","p"), main = "Altura"))
with( base2, lattice::xyplot( altura ~ dia, groups = planta, ylab="Pendiente por planta",type = c("r"), main = "Altura"))
with( base2, lattice::xyplot( altura ~ dia|planta, ylab="Altura de cada planta ",type = c("r","p"), main = "Altura"))
with( base2, lattice::xyplot( altura ~ dia, groups = planta, ylab="Pendiente por planta",type = c("r"), main = "Altura"))
with( base2, lattice::xyplot( diametro ~ dia|planta, ylab="Altura de cada planta ",type = c("r","p"), main = "Altura"))
with( base2, lattice::xyplot( diametro ~ dia, groups = planta, ylab="Pendiente por planta",type = c("r"), main = "Altura"))
with( base2, lattice::xyplot( altura ~ dia|planta, ylab="Altura de cada planta ",type = c("r","p"), main = "Altura"))
with( base2, lattice::xyplot( altura ~ dia, groups = planta, ylab="Pendiente por planta para altura",type = c("r"), main = "Altura"))
with( base2, lattice::xyplot( diametro ~ dia|planta, ylab="diametro de cada planta ",type = c("r","p"), main = "Altura"))
with( base2, lattice::xyplot( diametro ~ dia, groups = planta, ylab="Pendiente por planta para diametro",type = c("r"), main = "Altura"))
options(contrasts=c("contr.sum","contr.poly"))
mod1 = lme4::lmer( altura ~ dia*tratamiento + (1+dia|planta) , REML = F, data = base2)
knitr::opts_chunk$set(echo = TRUE)
library(tidyr)
library(dplyr)
load("germinacion.Rdata")
#negat
vacios = names(which(table(base$altura,base$planta)[1,]>1))
`%notin%` <- Negate(`%in%`)
base2 <- base %>% filter( planta %notin% vacios)
#base3 = base[base$planta%in%vacios==F,]
#length(unique(base2$medida))
library(tidyr)
library(dplyr)
load("germinacion.Rdata")
#negat
vacios = names(which(table(base$altura,base$planta)[1,]>1))
`%notin%` <- Negate(`%in%`)
base2 <- base %>% filter( planta %notin% vacios)
#base3 = base[base$planta%in%vacios==F,]
#length(unique(base2$medida))
load("germinacion.Rdata")
#negat
vacios = names(which(table(base$altura,base$planta)[1,]>1))
`%notin%` <- Negate(`%in%`)
base2 <- base %>% filter( planta %notin% vacios)
options(contrasts=c("contr.sum","contr.poly"))
mod1 = lme4::lmer( altura ~ dia*tratamiento + (1+dia|planta) , REML = F, data = base2)
options(contrasts=c("contr.sum","contr.poly"))
mod1 = lme4::lmer( altura ~ dia+riego*hongos+dia*riego + (1+dia|planta) , REML = F, data = base)
mod2 = lme4::lmer( altura ~ dia+riego*hongos+dia*riego + (1|planta) + (0+dia|planta) , REML = F, data = base)
anova( mod1, mod2)
options(contrasts=c("contr.sum","contr.poly"))
mod1 = lme4::lmer( altura ~ dia+riego*hongos+dia*riego + (1+dia|planta) , REML = F, data = base)
mod2 = lme4::lmer( altura ~ dia+riego*hongos+dia*riego + (1|planta) + (0+dia|planta) , REML = F, data = base)
anova( mod1, mod2, test = "LRT")
options(contrasts=c("contr.sum","contr.poly"))
mod1 = lme4::lmer( altura ~ dia+riego*hongos+ (1+dia|planta) , REML = F, data = base)
mod2 = lme4::lmer( altura ~ dia+riego*hongos+ (1|planta) + (0+dia|planta) , REML = F, data = base)
anova( mod1, mod2, test = "LRT")
options(contrasts=c("contr.sum","contr.poly"))
mod1 = lme4::lmer( altura ~ dia+riego*hongos+dia*riego + (1+dia|planta) , REML = F, data = base)
mod2 = lme4::lmer( altura ~ dia+riego*hongos+dia*riego + (1|planta) + (0+dia|planta) , REML = F, data = base)
anova( mod1, mod2, test = "LRT")
options(contrasts=c("contr.sum","contr.poly"))
mod1 = lme4::lmer( altura ~ dia*riego +riego*hongos + (1+dia|planta) , REML = F, data = base)
mod2 = lme4::lmer( altura ~ dia*riego +riego*hongos + (1|planta) + (0+dia|planta) , REML = F, data = base)
anova( mod1, mod2, test = "LRT")
t = anova( mod1, mod2, test = "LRT")
View(t)
View(t)
View(t)
lm( altura ~ dia*riego +riego*hongos  , data = base)
anova( lm( altura ~ dia*riego +riego*hongos  , data = base) )
options(contrasts=c("contr.sum","contr.poly"))
#anova( lm( altura ~ dia*riego +riego*hongos  , data = base) )
mod1 = lme4::lmer( altura ~ dia+riego+hongos+dia*riego +riego*hongos + (1+dia|planta) , REML = F, data = base)
mod2 = lme4::lmer( altura ~ dia+riego+hongos+dia*riego +riego*hongos + (1|planta) + (0+dia|planta) , REML = F, data = base)
t = anova( mod1, mod2, test = "LRT")
View(t)
View(t)
View(t)
anova( lm( altura ~ dia+riego+hongos+dia*riego +riego*hongos, data = base) )
lm(altura ~ dia+riego+dia*riego , data = base)
lm(altura ~ dia+riego+dia*riego , data = base)
lm(altura ~ dia*riego , data = base)
lm(altura ~ dia+riego+dia*riego , data = base)$coef
lm(altura ~ dia*riego , data = base)$coef
lm(altura ~ dia+riego+dia*riego , data = base)$coef
t=lm(altura ~ dia+riego+dia*riego , data = base)
t$coefficients
View(t$coefficients)
z=lm(altura ~ dia*riego , data = base)$coef
View(z$coefficients)
z=lm(altura ~ dia*riego , data = base)$coef
View(z$coefficients)
z=lm(altura ~ dia*riego , data = base)
View(z)
View(z$coefficients)
View(t)
View(t)
View(z)
View(z)
knitr::opts_chunk$set(echo = TRUE)
library(tidyr)
library(dplyr)
load("germinacion.Rdata")
#negat
vacios = names(which(table(base$altura,base$planta)[1,]>1))
`%notin%` <- Negate(`%in%`)
base2 <- base %>% filter( planta %notin% vacios)
#base3 = base[base$planta%in%vacios==F,]
#length(unique(base2$medida))
options(contrasts=c("contr.sum","contr.poly"))
mod1 = lme4::lmer( altura ~ dia+riego+hongos+dia*riego+riego*hongos + (1+dia|planta) , REML = F, data = base2)
mod2 = lme4::lmer( altura ~ dia+riego+hongos+dia*riego+riego*hongos + (1|planta) + (0+dia|planta) , REML = F, data = base2)
anova( mod1, mod2, test = "LRT")
mod3 = lme4::lmer( altura ~ dia+riego+hongos+dia*riego+riego*hongos + (1|planta), REML = F, data = base2)
anova( mod2, mod3, test = "LRT")
anova( mod3)
summary( mod3)
t = summary( mod3)
t$family
t
knitr::opts_chunk$set(echo = TRUE)
summary( mod3)
anova( mod3)
knitr::opts_chunk$set(echo = TRUE)
options(contrasts=c("contr.sum","contr.poly"))
mod1g = lme4::lmer( diametro ~ dia+riego+hongos+dia*riego+riego*hongos + (1+dia|planta) , REML = F, data = base2)
mod2g = lme4::lmer( diametro ~ dia+riego+hongos+dia*riego+riego*hongos + (1|planta) + (0+dia|planta) , REML = F, data = base2)
anova( mod1, mod2, test = "LRT")
options(contrasts=c("contr.sum","contr.poly"))
mod1g = lme4::lmer( diametro ~ dia+riego+hongos+dia*riego+riego*hongos + (1+dia|planta) , REML = F, data = base2)
mod2g = lme4::lmer( diametro ~ dia+riego+hongos+dia*riego+riego*hongos + (1|planta) + (0+dia|planta) , REML = F, data = base2)
anova( mod1g, mod2g, test = "LRT")
mod3g = lme4::lmer( diametro ~ dia+riego+hongos+dia*riego+riego*hongos + (1|planta), REML = F, data = base2)
anova( mod2g, mod3g, test = "LRT")
summary( mod2g)
anova( mod2g)
knitr::opts_chunk$set(echo = TRUE)
mod4 = lme4::lmer( altura ~ dia+riego+hongos+dia*riego + (1|planta), REML = F, data = base2)
anova( mod4, mod3, test = "LRT")
mod5 = lme4::lmer( altura ~ dia+riego+hongos + (1|planta), REML = F, data = base2)
anova( mod5, mod4, test = "LRT")
mod5 = lme4::lmer( altura ~ dia+riego+hongos + (1|planta), REML = F, data = base2)
anova( mod5, mod3, test = "LRT")
mod5 = lme4::lmer( altura ~ dia+riego+hongos + (1|planta), REML = F, data = base2)
anova( mod5, mod4, test = "LRT")
mod4g = lme4::lmer( diametro ~ dia+riego+hongos+dia*riego+ (1|planta) + (0+dia|planta) , REML = F, data = base2)
anova( mod4g, mod2g, test = "LRT")
mod5g = lme4::lmer( diametro ~ dia+riego+hongos+ (1|planta) + (0+dia|planta) , REML = F, data = base2)
anova( mod4g, mod5g, test = "LRT")
